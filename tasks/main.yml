---
# tasks file for spacemacs


# git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d

- name: define emacs source dir
  set_fact:
    emacs_source_dir: "/opt/emacs_src"


- name: create source dir
  file:
    path: "{{ emacs_source_dir }}"
    state: directory


- name: check emacs installation
  command: emacs --version
  ignore_errors: true
  register: emacs_result

- name: set emacs_installed var
  set_fact:
    emacs_installed: true
  when: emacs_result|succeeded and "{{ emacs_version }}" in "{{ emacs_result }}"


- block:
  - name: install spacemacs requirements 
    become: yes
    apt:
      name: "{{ item }}"
      update_cache: yes
      state: present
    with_items:
      - git-core
      - pandoc
      - build-essential


  - name: install required dependencies
    apt:
      name: "{{ item }}"
      state: build-dep
    with_items:
      - emacs24
   
  - name: download emacs {{ emacs_version }}
    get_url:
      dest: "{{ emacs_source_dir }}/emacs-{{ emacs_version }}.tar.gz"
      url: "http://ftp.gnu.org/gnu/emacs/emacs-{{ emacs_version }}.tar.gz"
    when: offline_mode is undefined

  - name: copy emacs {{ emacs_version }}
    copy:
      src: "binaries/emacs-{{ emacs_version }}.tar.gz"
      dest:  "{{ emacs_source_dir }}/emacs-{{ emacs_version }}.tar.gz"
    when: offline_mode is defined
   
  - name: unpack emacs
    unarchive:
      src: "{{ emacs_source_dir }}/emacs-{{ emacs_version }}.tar.gz"
      dest: "{{ emacs_source_dir }}"
   
  - name: configure emacs
    shell: "{{ item }}"
    args:
      chdir: "{{ emacs_source_dir }}/emacs-{{ emacs_version }}"
    with_items:
      ./configure
   
  - name: compile emacs
    make:
      chdir: "{{ emacs_source_dir }}/emacs-{{ emacs_version }}"
   
  - name: install emacs
    make:
      chdir: "{{ emacs_source_dir }}/emacs-{{ emacs_version }}"
      target: install
    become: yes
   
  - name: install spacemacs 
    git:
      repo: "https://github.com/syl20bnr/spacemacs"
      dest: "/home/{{ ansible_user }}/.emacs.d"
      clone: yes
      force: yes
      accept_hostkey: yes
      version: master
    become: yes
    become_user: "{{ansible_user}}"

  when: emacs_installed is undefined    

- name: make spacemacs config file
  template: 
    src: spacemacs.config.ab 
    dest: '/home/{{ ansible_user }}/.spacemacs' 
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}' 
    mode: 0640


- name: install spacemacs packages into emacs
  shell: "emacs -nw -batch -u \"${UNAME}\" -q -kill"
  become: yes
  become_user: "{{ ansible_user }}"

- name: start emacs server if not present
  blockinfile:
    dest: '/home/{{ ansible_user }}/.bashrc'
    insertbefore: "#THIS MUST BE "
    marker: "# {mark} ANSIBLE MANAGED BLOCK emacs config"
    block: |
      export ALTERNATE_EDITOR=""
      alias e='emacsclient'


- name: copy ediff function
  copy:
    src: "{{ role_path }}/files/ediff.sh"
    dest: /tmp

- name: insert text of ediff.sh in var
  shell: cat /tmp/ediff.sh
  register: ediff_data
    
- name: call emacs for diffing files with ediff function
  blockinfile:
    dest: '/home/{{ ansible_user }}/.bashrc'
    marker: "# {mark} ANSIBLE MANAGED BLOCK emacs config"
    block: |
      {{ ediff_data.stdout }}
    
